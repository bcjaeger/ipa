% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation.R
\name{gen_simdata}
\alias{gen_simdata}
\title{a simple framework to simulate simple dataframes}
\usage{
gen_simdata(
  problem_type = c("regression", "classification", "survival"),
  ncov = 3,
  nint = 2,
  ngrp = 1,
  degree = 3,
  rho = 1/2,
  corstr = c("AR1", "CS"),
  nobs = 10000,
  error_sd = 1/2,
  prevalence = NULL,
  split_prop = 1/2
)
}
\arguments{
\item{problem_type}{A character value indicating the problem type to
simulate data for. Valid options are 'regression', 'classification',
or 'survival'.}

\item{ncov}{the number of main effects used to generate an outcome variable}

\item{nint}{the number of interaction effects used to generate an outcome
variable.}

\item{ngrp}{the number of X groups in the data. Each X group will have
different mean values for the \code{ncov} predictor variables, but will
not have different rules governing the relationship between response
and predictor variables.}

\item{degree}{the degree of each predictor variable's relationship to
the outcome. For example, \code{degree = 2} makes the relationship between
each predictor variable and the outcome quadratic.}

\item{rho}{the correlation coefficient among predictors in the X matrix.}

\item{corstr}{The correlation structure among predictors in the X matrix.}

\item{nobs}{the total number of observations in the simulated data.}

\item{error_sd}{the standard deviation of error applied when generating
outcome values.}

\item{prevalence}{the prevalence of the outcome.
(only relevant for classification problems).}

\item{split_prop}{the proportion of data that will be randomly assigned
to the training dataset.}
}
\description{
Simulated data allow analysts to conduct controlled experiments
using specific parameters to generate data.
}
\details{
All simulated predictor variables are numeric. Regression coefficients
are generated randomly (all values are between -1 and 1).
}
\examples{

regr = gen_simdata(problem_type = 'regression',
  ncov = 3, nint = 2, degree = 3, nobs = 2000)

clsf = gen_simdata(problem_type = 'classification',
  ncov = 3, nint = 2, degree = 3, nobs = 2000)


surv = gen_simdata(problem_type = 'survival',
  ncov = 3, nint = 2, degree = 3, nobs = 2000)
}
