% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sip.R
\name{sip}
\alias{sip}
\title{Sip a brew}
\usage{
sip(
  brew,
  from = "training",
  data_complete,
  fun_ctns_error = yardstick::rsq_vec,
  fun_intg_error = yardstick::rsq_vec,
  fun_bnry_error = yardstick::kap_vec,
  fun_catg_error = yardstick::kap_vec
)
}
\arguments{
\item{brew}{an \code{ipa_brew} object.}

\item{from}{column name for sipping. Valid options are
training and testing. Inputs can be quoted (e.g. 'training')
or unquoted (e.g. training).}

\item{data_complete}{a data frame containing the 'true' values
that were 'missing'.}

\item{fun_ctns_error}{a function that will evaluate errors for
continuous variables. Continuous variables have type \code{double}.
Default is to use R-squared (see \code{\link[yardstick:rsq]{yardstick::rsq()}}).}

\item{fun_intg_error}{a function that will evaluate errors for
integer valued variables. Default is to use R-squared
(see \code{\link[yardstick:rsq]{yardstick::rsq()}}).}

\item{fun_bnry_error}{a function that will evaluate errors for
binary variables (i.e., factors with 2 levels). Default
is to use kappa agreement (see \code{\link[yardstick:kap]{yardstick::kap()}}).}

\item{fun_catg_error}{a function that will evaluate errors for
categorical variables (i.e., factors with >2 levels). Default
is to use kappa agreement (see \code{\link[yardstick:kap]{yardstick::kap()}}).}
}
\value{
an \code{ipa_brew} object with a new column added to the \code{wort}.
The new column contains a list of \code{\link[tibble:tibble]{tibble::tibble()}}s with columns
\code{variable}, \code{type}, and \code{score}. The \code{score} column comprises
output from the \code{error} functions.
}
\description{
Sip a brew
}
\examples{

data("diabetes")

df_miss <- diabetes$missing
df_cplt <- diabetes$complete

sft_brew <- brew_soft(df_miss, outcome = diabetes) \%>\%
  mash() \%>\%
  ferment() \%>\%
  bottle(type = 'tibble')

sip(sft_brew, from = training, data_complete = df_cplt)

}
