% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mash.R
\name{masher_nbrs}
\alias{masher_nbrs}
\title{Neighbor's masher}
\usage{
masher_nbrs(
  epsilon = 1e-08,
  nthread = getOption("gd_num_thread"),
  fun_aggr_ctns = mean,
  fun_aggr_intg = medn_est,
  fun_aggr_catg = mode_est
)
}
\arguments{
\item{epsilon}{Computed numbers (variable ranges) smaller than eps are
treated as zero}

\item{nthread}{Number of threads to use for parallelization. By default,
for a dual-core machine, 2 threads are used. For any other machine n-1
cores are used so your machine doesn't freeze during a big computation.
The maximum nr of threads are determined using omp_get_max_threads
at C level.}

\item{fun_aggr_ctns}{a function used to aggregate neighbors for continuous
variables. If unspecified, the \code{mean()} function is used.}

\item{fun_aggr_intg}{a function used to aggregate neighbors for integer
values variables. If unspecified, the \code{medn_est()} function is used.
This function returns the median of neighbor values, rounded to the
nearest integer. \code{medn_est_conserve()} goes one step further and
identifies which neighbor value is closest to the median, and returns
that value. Both of these options can be helpful for integer valued
columns if you want to make sure the imputed values do not contain
impossible quantities, e.g. no. of children = 3/4.}

\item{fun_aggr_catg}{a function used to aggregate neighbors for categorical
variables. If unspecified, the \code{mode_est()} function is used.}
}
\value{
a list with input values that can be passed directly into
a neighborhood brew objects via \link{mash},
e.g \code{mash(brew, with = masher_nbrs())}.
}
\description{
It can be a little overwhelming to remember which sets of
parameters go with each \code{ipa_brew} flavor, so just pair your
flavor with its \code{masher} function and get on with your \code{brew}.
}
