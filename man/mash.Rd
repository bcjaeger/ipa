% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mash.R
\name{mash}
\alias{mash}
\alias{mash.softImpute_brew}
\alias{mash.kneighbors_brew}
\alias{mash.missRanger_brew}
\alias{is_mashed}
\title{Mash a brew}
\usage{
mash(brew, with = NULL, ...)

\method{mash}{softImpute_brew}(brew, with = NULL, ...)

\method{mash}{kneighbors_brew}(brew, with = NULL, ...)

\method{mash}{missRanger_brew}(brew, with = NULL, ...)

is_mashed(brew)
}
\arguments{
\item{brew}{an \code{ipa_brew} object that may or may not have
been spiced (see \link{spice}).}

\item{with}{the output of a helper function for mashing brews.
The helper functions are \link{masher_nbrs}, \link{masher_soft}, and
\link{masher_rngr}.}

\item{...}{additional arguments for specific brew flavors.}
}
\description{
When an \code{ipa_brew} is mashed, training data are
used to fit imputation models based on the brew flavor.
}
\section{Methods (by class)}{
\itemize{
\item \code{softImpute_brew}: Mash a soft brew (use \link{masher_soft} for \code{with}).

\item \code{kneighbors_brew}: Mash a neighbor's brew (use \link{masher_nbrs} for \code{with})

\item \code{missRanger_brew}: Mash a ranger's brew (use \link{masher_rngr} for \code{with})
}}

\examples{

set.seed(101)
n=200
p=100
J=50
np=n*p
missfrac=0.3
x=matrix(rnorm(n*J),n,J)\%*\%matrix(rnorm(J*p),J,p)+matrix(rnorm(np),n,p)/5
ix=seq(np)
imiss=sample(ix,np*missfrac,replace=FALSE)
xna=x
xna[imiss]=NA

data <- as.data.frame(xna)

soft_brew <- brew(data, outcome = V1, flavor = 'softImpute')
soft_brew <- spice(soft_brew, n_impute = 10, step_size = 2)
soft_brew <- mash(soft_brew, scale_lambda = 0.12)

soft_brew$wort
}
